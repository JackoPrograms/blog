"""
Django settings for information_security project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q-*-p-%&g2vc5j=ujjc(7(=ovtkr&1%t*_)1x=j%pd$7zyyr+z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'bootstrap4',
    'ckeditor',
    'ckeditor_uploader',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'information_security.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'information_security.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True






# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/



### Описание статических файлов в проекте и приложениях.
# Эти настройки помагли добавить изображение к превтю статьи (часть 1)

# URL для статических файлов
STATIC_URL = '/static/'

# Дополнительные директории для поиска статических файлов (используется в разработке). Хранятся в списке STATICFILES_DIRS
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Для работы редактора админ панели CKEditor
STATICFILES_DIRS += [
    os.path.join(BASE_DIR, 'blog', 'static'),
]

# Директория для команды collectstatic (используется при развертывании)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')



### Данные строки кода представляют собой настройки для управления загружаемыми файлами в веб-приложении на Django. Вот что каждая строка означает:

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Эти настройки помагли добавить изображение к превтю статьи (часть 2)
MEDIA_URL = '/media/'  # Это корневая директория, в которую будут сохраняться все загружаемые файлы.
MEDIA_ROOT = os.path.join(BASE_DIR, 'blog', 'media/')  # URL-адрес, по которому будут доступны загружаемые файлы


# Путь для загрузки файлов через CKEditor
CKEDITOR_UPLOAD_PATH = "uploads/"  # Поддиректория внутри MEDIA_ROOT, куда будут сохраняться файлы, загруженные через CKEditor.
# /media/post_images - сохраняются привью для постов
# /media/uploads - сохраняет все фото которые были добавлены в статьи



# # Директория для команды collectstatic (используется при развертывании)
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

CKEDITOR_CONFIGS = {
    'default': {
        # Использовать полную панель инструментов CKEditor
        'toolbar': 'full',

        # Добавить дополнительные плагины, которые не включены по умолчанию
        'extraPlugins': ','.join([
            'codesnippet',  # Плагин для вставки блоков кода
        ]),

        # Настройка панели инструментов. Определить кастомную панель инструментов
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],  # Инструменты для форматирования текста (жирный, курсив, подчеркивание)
            ['CodeSnippet'],  # Инструмент для вставки блоков кода
            ['Link', 'Unlink'],  # Инструменты для добавления и удаления ссылок
            ['BulletedList', 'NumberedList'],  # Инструменты для создания маркерованных и нумерованных списков
            ['RemoveFormat', 'Source']  # Инструменты для удаления форматирования и переключения в режим исходного кода
        ],

        # Установить высоту редактора в пикселях
        'height': 500,

        # Установить ширину редактора (100% от контейнера)
        'width': '100%',

        # Разрешить сворачивание и разворачивание панели инструментов
        'toolbarCanCollapse': True,
    }
}

